{"version":3,"sources":["scripts/main.js"],"names":["elementTable","document","querySelector","rowsArr","tBodies","rows","headCells","tHead","cells","sortCollsColumns","indexColumn","arr","sort","a","b","A","textContent","B","replace","forEach","el","appendChild","addEventListener","e","firstElementChild","contains","target","tagName","indexHeadCall","indexOf"],"mappings":";AAAA,aAuBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArBA,IAAMA,EAAeC,SAASC,cAAc,SACtCC,EAAcH,EAAAA,EAAaI,QAAQ,GAAGC,MACtCC,EAAgBN,EAAAA,EAAaO,MAAMF,KAAK,GAAGG,OAC3CC,EAAmB,SAACC,EAAaC,GACrCA,EAAIC,KAAK,SAACC,EAAGC,GACPC,IAAAA,EAAI,EAAIF,EAAEL,OAAOE,GAAaM,YAC9BC,EAAI,EAAIH,EAAEN,OAAOE,GAAaM,YAO1BD,MALmC,WAAvCT,EAAUI,GAAaM,cACzBD,GAAKA,EAAEG,QAAQ,MAAO,IACtBD,GAAKA,EAAEC,QAAQ,MAAO,KAGhBH,EAAIE,EAAK,EAAMF,EAAIE,GAAM,EAAI,IAGvCN,EAAIQ,QAAQ,SAACC,GACXpB,EAAaqB,YAAYD,MAI7BpB,EAAasB,iBAAiB,QAAS,SAASC,GAC1C,GAAC,KAAKC,kBAAkBC,SAASF,EAAEG,SAAgC,OAArBH,EAAEG,OAAOC,QAAvD,CAIEC,IAAAA,EAAgBtB,EAAUuB,QAAQN,EAAEG,QAE1CjB,EAAiBmB,EAAezB","file":"main.1464b47c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst elementTable = document.querySelector('table');\nconst rowsArr = [...elementTable.tBodies[0].rows];\nconst headCells = [...elementTable.tHead.rows[0].cells];\nconst sortCollsColumns = (indexColumn, arr) => {\n  arr.sort((a, b) => {\n    let A = [...a.cells][indexColumn].textContent;\n    let B = [...b.cells][indexColumn].textContent;\n\n    if (headCells[indexColumn].textContent === 'Salary') {\n      A = +A.replace(/\\D/g, '');\n      B = +B.replace(/\\D/g, '');\n    };\n\n    return (A > B) ? 1 : ((A < B) ? -1 : 0);\n  });\n\n  arr.forEach((el) => {\n    elementTable.appendChild(el);\n  });\n};\n\nelementTable.addEventListener('click', function(e) {\n  if (!this.firstElementChild.contains(e.target) || e.target.tagName !== 'TH') {\n    return;\n  };\n\n  const indexHeadCall = headCells.indexOf(e.target);\n\n  sortCollsColumns(indexHeadCall, rowsArr);\n});\n"]}